wordCountJob {

  input {
    topic: "input"
  }

  output {
    topic: "output"
  }

  stopWords: ["a", "an", "the"]

  windowDuration: 30s

  slideDuration: 10s

  spark {
    master: "local[4]"
    appName: "example-spark-kafka"
    kryoClasses: [
      "org.mkuthan.spark.payload.StringPayloadDecoder",
      "org.mkuthan.spark.payload.StringPayloadEncoder"
    ]
  }

  sparkStreaming {
    batchDuration: 5s
    checkpoint: ${java.io.tmpdir}
  }

  encoders {
    string {
      encoding: "UTF8"
    }
  }

  decoders {
    string {
      encoding: "UTF8"
    }
  }

  sources {
    kafka {
      // kafka consumer properties
      "metadata.broker.list": "localhost:9092"
      "auto.offset.reset": "smallest"
    }
  }

  sinks {
    kafka {
      // kafka producer properties
      "bootstrap.servers": "localhost:9092"
      "acks": "1"
    }
  }
}
